plugins {
    id 'java-library'
    id 'application'
    id 'io.sentry.jvm.gradle' version '3.13.0'
}

group 'org.geysermc.discordbot'
version '3.0'

repositories {
//    mavenLocal()
    mavenCentral()

    maven {
        url 'https://jitpack.io'
    }

    maven {
        url 'https://repo.opencollab.dev/main'
    }

    maven {
        url 'https://m2.chew.pro/releases/'
    }

    maven {
        url 'https://m2.chew.pro/snapshots/'
    }

    maven {
        url 'https://repo.rtm516.co.uk/main/'
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.3'

    // JDA
    implementation 'net.dv8tion:JDA:5.3.2'
    implementation 'pw.chew:jda-chewtils:2.1'

    // Logging
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    implementation 'org.slf4j:slf4j-api:2.0.13'

    // Error logging
    implementation 'io.sentry:sentry-logback:7.11.0'

    // Json for web requests
    implementation 'org.json:json:20240303'

    // Database implementations
    implementation 'com.mysql:mysql-connector-j:9.0.0'
    implementation 'org.xerial:sqlite-jdbc:3.46.0.0'

    // Pinging java and bedrock servers
    implementation 'com.github.rtm516:minecraft-server-ping:c61c496104'
    implementation 'com.nukkitx.protocol:bedrock-common:2.9.17-SNAPSHOT'

    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.ocpsoft.prettytime:prettytime:5.0.9.Final'
    implementation 'commons-net:commons-net:3.11.1'

    // Parsing HTML
    implementation 'org.jsoup:jsoup:1.18.1'

    // Github API
    implementation 'org.kohsuke:github-api:1.323'

    // Basic HTML templating engine
    implementation 'org.freemarker:freemarker:2.3.33'

    // SVG parsing
    implementation 'org.apache.xmlgraphics:batik-util:1.17'
    implementation 'org.apache.xmlgraphics:batik-anim:1.17'
    implementation 'org.apache.xmlgraphics:batik-transcoder:1.17'
    implementation 'org.apache.xmlgraphics:batik-rasterizer:1.17'

    // Parses stack traces from text
    implementation 'com.rtm516:StackParser:1.0.0'

    // For adding users to the user cache in JDA
    implementation 'net.sf.trove4j:core:3.1.0'

    // Reading RSS feeds
    implementation 'com.rometools:rome:2.1.0'

    // Image processing and OCR
    implementation 'net.sourceforge.tess4j:tess4j:5.12.0'
    implementation 'org.imgscalr:imgscalr-lib:4.2'

    // Agolia Search (For Wiki)
    implementation 'com.algolia:algoliasearch:4.3.2'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    archiveFileName = "${project.name}.jar"

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes (
            'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
            'Main-Class': 'org.geysermc.discordbot.GeyserBot'
        )
    }
}

// Allow running with `./gradlew run` task
application {
    mainClass = 'org.geysermc.discordbot.GeyserBot'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

sentry {
    includeSourceContext = System.getenv("SENTRY_AUTH_TOKEN") != null

    org = "geysermc"
    projectName = "geyserdiscordbot"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}
