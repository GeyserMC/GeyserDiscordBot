plugins {
    id 'java-library'
    id 'application'
    id 'io.sentry.jvm.gradle' version '5.4.0'
}

group 'org.geysermc.discordbot'
version '3.0'

repositories {
//    mavenLocal()
    mavenCentral()

    maven {
        url 'https://jitpack.io'
    }

    maven {
        url 'https://repo.opencollab.dev/main'
    }

    maven {
        url 'https://m2.chew.pro/releases/'
    }

    maven {
        url 'https://m2.chew.pro/snapshots/'
    }

    maven {
        url 'https://repo.rtm516.co.uk/main/'
    }
}

dependencies {
    testImplementation libs.junit.api
    testRuntimeOnly libs.junit.engine

    implementation libs.bundles.jda

    implementation libs.bundles.logging

    // Json for web requests
    implementation libs.json

    implementation libs.bundles.database

    // Pinging java and bedrock servers
    implementation libs.bundles.ping

    implementation libs.reflections
    implementation libs.prettytime
    implementation libs.commonsnet

    // Parsing HTML
    implementation libs.jsoup

    // Github API
    implementation libs.github

    // Basic HTML templating engine
    implementation libs.freemarker

    // SVG parsing
    implementation libs.bundles.batik

    // Parses stack traces from text
    implementation libs.stackparser

    // Reading RSS feeds
    implementation libs.rome

    // Image processing and OCR
    implementation libs.bundles.ocr

    // Agolia Search (For Wiki)
    implementation libs.algolia
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    archiveFileName = "${project.name}.jar"

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    manifest {
        attributes (
            'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
            'Main-Class': 'org.geysermc.discordbot.GeyserBot'
        )
    }
}

/*
 * Copyright (c) 2025 GeyserMC. http://geysermc.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @author GeyserMC
 * @link https://github.com/GeyserMC/GeyserDiscordBot
 */

// Allow running with `./gradlew run` task
application {
    mainClass = 'org.geysermc.discordbot.GeyserBot'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

sentry {
    includeSourceContext = System.getenv("SENTRY_AUTH_TOKEN") != null

    org = "geysermc"
    projectName = "geyserdiscordbot"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}
